@function affix($node-list, $prefix: "", $suffix: "") {
  $new-node-list: [];

  @each $node in $node-list {
    $node-name: map-get($node, "name");
    $new-node-list: append(
      $new-node-list,
      map-merge($node, ("name": "#{$prefix}#{$node-name}#{$suffix}"))
    );
  }

  @return $new-node-list;
}

@function deep-map-merge($map1, $map2) {
  $merged-map: $map1;

  @each $key, $value in $map2 {
    @if type-of(map-get($merged-map, $key)) == "map" and type-of($value) == "map" {
      $merged-map: map-merge(
        $merged-map,
        ($key: deep-map-merge(map-get($merged-map, $key), $value))
      );
    } @else {
      $merged-map: map-merge($merged-map, ($key: $value));
    }
  }

  @return $merged-map;
}

@function map-fetch($map, $keys) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function value-map($values...) {
  $value-map: ();

  @each $value in $values {
    @if type-of($value) == "map" {
      $value-map: map-merge($value-map, $value);
    } @else {
      $value-map: map-merge($value-map, ("#{$value}": $value));
    }
  }

  @return $value-map;
}

@function get-base-utility-class($util-class) {
  $parts: _a_split($util-class, ":");

  @if length($parts) > 0 {
    @return ".#{nth(_a_split($util-class, ':'), -2)}";
  }

  @return $util-class;
}

@function organize-tree($tree) {
  // Moves the media queries to the end of the tree
  $normal-tree: ();
  $media-tree: ();

  @each $key, $value in $tree {
    @if str-index($key, "@media") == 1 {
      $media-tree: map-merge($media-tree, ($key: $value));
    } @else {
      $normal-tree: map-merge($normal-tree, ($key: $value));
    }
  }

  @return map-merge($normal-tree, $media-tree);
}
