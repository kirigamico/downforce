$_df_modifiers: ();
$_df_utility_tree: ();

@mixin register-modifier($mod-name, $mod-func-name) {
  @if not map-has-key($_df_modifiers, $mod-name) {
    $modifiers: ($mod-name: get-function($mod-func-name));
    $_df_modifiers: map-merge($_df_modifiers, $modifiers) !global;
  }
}

@function get-modifier($mod-name) {
  $mod-func: map-get($_df_modifiers, $mod-name);

  @if $mod-func == null {
    $error: "Modifier `#{$mod-name}` not found.";
    @return _a_error($error, "get-modifier");
  }

  @return $mod-func;
}

@mixin register-utility($util-name, $util-tree, $mod-names: []) {
  $override-map: map-get($df-utilities, $util-name);

  // Do not build the utility if it has been disabled
  @if type-of($override-map) != "bool" or $override-map != false {
    @if length($mod-names) > 0 {
      $util-tree: map-merge($util-tree, apply-modifiers($util-tree, $mod-names));
    }

    $_df_utility_tree: deep-map-merge($_df_utility_tree, $util-tree) !global;
  }
}

@mixin register-utility-map($util-name, $util-map) {
  $override-map: map-get($df-utilities, $util-name);

  // Do not build the utility if it has been disabled
  @if type-of($override-map) != "bool" or $override-map != false {
    @if $override-map != null {
      $util-map: map-merge($util-map, $override-map);
    }
    $_df_utility_tree: deep-map-merge($_df_utility_tree, build-utility($util-map)) !global;
  }
}
