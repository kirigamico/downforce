@import "accoutrement/sass/core";
@import "helpers";

@function build-utility($util-map) {
  // Add defaults
  $defaults: (prefix: "", modifiers: []);
  $util-map: map-merge($defaults, $util-map);

  // TODO: Add error when properties or values is not defined

  $prefix: map-get($util-map, "prefix");
  $prop-map: map-get($util-map, "properties");
  $value-map: map-get($util-map, "values");
  $mod-names: map-get($util-map, "modifiers");

  $util-tree: ();

  @each $prop-key, $prop-name in $prop-map {
    @each $setting, $value in $value-map {
      $props: ();

      @each $prop in $prop-name {
        $props: map-merge($props, ($prop: $value));
      }

      $name: "";
      @if $prefix == "" and $prop-key == "*"  {
        $name: ".#{$setting}";
      } @else if $prop-key == "*" {
        $name: ".#{$prefix}-#{$setting}";
      } @else {
        $name: ".#{$prefix}#{$prop-key}-#{$setting}";
      }

      $util-tree: map-merge($util-tree, ($name: $props));
    }
  }

  @each $mod-name in $mod-names {
    $mod: map-get($global-downforce-modifiers, $mod-name);
    $util-tree: map-merge($util-tree, call($mod, $util-tree));
  }

  @return $util-tree;
}

@function build-utilities($utilities) {
  $tree: ();

  @each $util-map in map-values($utilities) {
    $tree: deep-map-merge($tree, build-utility($util-map));
  }

  // Move media queries to the very end
  $normal-tree: ();
  $media-tree: ();

  @each $key, $value in $tree {
    @if str-index($key, "@media") == 1 {
      $media-tree: map-merge($media-tree, ($key: $value));
    } @else {
      $normal-tree: map-merge($normal-tree, ($key: $value));
    }
  }

  @return map-merge($normal-tree, $media-tree);
}
